# Generated by Django 3.1.4 on 2020-12-30 20:57

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contents', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='create')),
                ('update_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='update')),
                ('alias', models.CharField(max_length=64, verbose_name='alias')),
                ('ts_token', models.CharField(max_length=64, verbose_name='ts_token')),
                ('city_ver', models.BigIntegerField(verbose_name='city_ver')),
                ('city_id', models.CharField(max_length=20, verbose_name='city id')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('device_id', models.CharField(max_length=100, verbose_name='device id')),
            ],
            options={
                'verbose_name': 'account',
                'verbose_name_plural': 'accounts',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='Air',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='create')),
                ('update_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='update')),
                ('bid', models.CharField(max_length=50, verbose_name='building id')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Factory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='create')),
                ('update_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='update')),
                ('bid', models.CharField(max_length=50, verbose_name='building id')),
                ('pos_i', models.SmallIntegerField(verbose_name='i')),
                ('pos_j', models.SmallIntegerField(verbose_name='j')),
                ('state', models.SmallIntegerField(verbose_name='state')),
                ('check_time', models.BigIntegerField(verbose_name='check time')),
                ('level', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='amount')),
                ('shelf_count', models.SmallIntegerField(blank=True, default=6, verbose_name='slot count')),
                ('slot_count', models.SmallIntegerField(blank=True, default=2, verbose_name='slot count')),
                ('building', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='factories', to='contents.building')),
            ],
            options={
                'verbose_name': 'factory',
                'verbose_name_plural': 'factories',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='GameInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='create')),
                ('update_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='update')),
                ('fetch_city_header_path', models.CharField(max_length=2048, verbose_name='fetch city header path')),
                ('fetch_city_body_path', models.CharField(max_length=2048, verbose_name='fetch city body path')),
                ('decode_body_path', models.CharField(max_length=2048, verbose_name='decode body path')),
                ('decode_data_path', models.CharField(max_length=2048, verbose_name='decode data path')),
                ('fetch_city_ts_id', models.CharField(max_length=50, verbose_name='fetch city ts_id')),
                ('bp', models.CharField(max_length=50, verbose_name='bp')),
                ('cash', models.PositiveIntegerField(verbose_name='cash')),
                ('ch', models.BooleanField(null=True, verbose_name='ch')),
                ('cityId', models.CharField(max_length=50, verbose_name='city id')),
                ('coins', models.PositiveIntegerField(verbose_name='coins')),
                ('deviceId', models.CharField(max_length=100, verbose_name='deviceId')),
                ('flw', models.PositiveIntegerField(null=True, verbose_name='flw')),
                ('gameId', models.CharField(max_length=50, null=True, verbose_name='gameId')),
                ('gpId', models.CharField(max_length=50, null=True, verbose_name='gpId')),
                ('gpName', models.CharField(max_length=50, null=True, verbose_name='gpName')),
                ('gsd', models.FloatField(null=True, verbose_name='gsd')),
                ('help', models.CharField(max_length=10240, null=True, verbose_name='help')),
                ('jb', models.BooleanField(null=True, verbose_name='pf')),
                ('lang', models.CharField(max_length=50, null=True, verbose_name='lang')),
                ('lvl', models.PositiveIntegerField(null=True, verbose_name='level')),
                ('name', models.CharField(max_length=50, null=True, verbose_name='name')),
                ('pf', models.BooleanField(null=True, verbose_name='pf')),
                ('pic', models.CharField(max_length=50, null=True, verbose_name='pic')),
                ('prev', models.BigIntegerField(null=True, verbose_name='ver')),
                ('tz', models.IntegerField(null=True, verbose_name='tz')),
                ('ver', models.BigIntegerField(null=True, verbose_name='ver')),
                ('xp', models.PositiveIntegerField(null=True, verbose_name='xp')),
                ('zooac', models.PositiveIntegerField(null=True, verbose_name='zooac')),
                ('fver', models.PositiveIntegerField(null=True, verbose_name='fver')),
                ('dkey', models.CharField(max_length=20, null=True, verbose_name='dkey')),
                ('updat', models.BigIntegerField(null=True, verbose_name='updAt')),
                ('likes', models.PositiveIntegerField(null=True, verbose_name='likes')),
                ('bver', models.CharField(max_length=50, null=True, verbose_name='bver')),
                ('ernies_likes', models.BigIntegerField(null=True, verbose_name='ernies likes')),
                ('account', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='gameinfos', to='gameinfos.account')),
                ('version', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='gameinfos', to='contents.townshipversion')),
            ],
            options={
                'verbose_name': 'gameinfo',
                'verbose_name_plural': 'gameinfos',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='Helicopter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='create')),
                ('update_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='update')),
                ('bid', models.CharField(max_length=50, verbose_name='building id')),
                ('gameinfo', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='helicopters', to='gameinfos.gameinfo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Train',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='create')),
                ('update_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='update')),
                ('bid', models.CharField(max_length=50, verbose_name='building id')),
                ('building', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='trains', to='contents.building')),
                ('gameinfo', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='trains', to='gameinfos.gameinfo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HelicopterItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='create')),
                ('update_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='update')),
                ('amount', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='amount')),
                ('reward_cash', models.PositiveIntegerField(verbose_name='reward exp')),
                ('reward_coin', models.PositiveIntegerField(verbose_name='reward coin')),
                ('reward_exp', models.PositiveIntegerField(verbose_name='reward exp')),
                ('helicopter', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='helicopter_items', to='gameinfos.helicopter')),
                ('product', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='helicopter_items', to='contents.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GlobalInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='create')),
                ('update_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='update')),
                ('orderSeq', models.PositiveIntegerField(verbose_name='orderSeq')),
                ('money', models.PositiveIntegerField(verbose_name='money')),
                ('moneyCash', models.PositiveIntegerField(verbose_name='moneyCash')),
                ('maxResidents', models.PositiveIntegerField(verbose_name='maxResidents')),
                ('lastVisitDay', models.PositiveIntegerField(verbose_name='lastVisitDay')),
                ('lastVisitDayEBR', models.PositiveIntegerField(verbose_name='lastVisitDayEBR')),
                ('lastVisitSaleDay', models.PositiveIntegerField(verbose_name='lastVisitSaleDay')),
                ('levelup', models.PositiveIntegerField(verbose_name='levelup')),
                ('var_hex', models.CharField(max_length=50, verbose_name='hex')),
                ('var_hex2', models.CharField(max_length=50, verbose_name='hex2')),
                ('gameStartDate', models.BigIntegerField(verbose_name='gameStartDate')),
                ('gameId', models.CharField(max_length=50, verbose_name='gameId')),
                ('factoryTime', models.BigIntegerField(verbose_name='factoryTime')),
                ('earnedCash', models.PositiveIntegerField(verbose_name='earnedCash')),
                ('experience', models.BigIntegerField(verbose_name='experience')),
                ('dayInGame', models.PositiveIntegerField(verbose_name='dayInGame')),
                ('changeVarTimestamp', models.BigIntegerField(verbose_name='changeVarTimestamp')),
                ('timeInGame', models.FloatField(verbose_name='timeInGame')),
                ('townName', models.CharField(max_length=50, verbose_name='townName')),
                ('saveGlobalTime', models.BigIntegerField(verbose_name='saveGlobalTime')),
                ('GHash', models.BigIntegerField(verbose_name='GHash')),
                ('FVer', models.PositiveIntegerField(verbose_name='FVer')),
                ('EarnedCoins', models.PositiveIntegerField(verbose_name='EarnedCoins')),
                ('ExpandLevel', models.PositiveIntegerField(verbose_name='ExpandLevel')),
                ('CTTime', models.PositiveIntegerField(verbose_name='CTTime')),
                ('AirScore2', models.PositiveIntegerField(verbose_name='AirScore2')),
                ('AirScore1', models.PositiveIntegerField(verbose_name='AirScore1')),
                ('AirVersion', models.PositiveIntegerField(verbose_name='AirVersion')),
                ('WHUdup', models.PositiveIntegerField(verbose_name='WHUdup')),
                ('VCheckTime', models.BigIntegerField(verbose_name='VCheckTime')),
                ('SCOrders', models.BigIntegerField(verbose_name='SCOrders')),
                ('SCTime', models.BigIntegerField(verbose_name='SCTime')),
                ('SBCTime', models.BigIntegerField(verbose_name='SBCTime')),
                ('PrevGCID', models.CharField(max_length=50, verbose_name='PrevGCID')),
                ('gameinfo', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='global_info', to='gameinfos.gameinfo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FactoryItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='create')),
                ('update_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='update')),
                ('amount', models.PositiveSmallIntegerField(verbose_name='amount')),
                ('idx', models.PositiveSmallIntegerField(verbose_name='amount')),
                ('order_time', models.BigIntegerField(verbose_name='order time')),
                ('order_max_time', models.BigIntegerField(verbose_name='order max time')),
                ('factory', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='factory_items', to='gameinfos.factory')),
                ('product', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='factory_items', to='contents.product')),
            ],
            options={
                'verbose_name': 'factory item',
                'verbose_name_plural': 'factory items',
                'ordering': ['-pk'],
            },
        ),
        migrations.AddField(
            model_name='factory',
            name='gameinfo',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='factories', to='gameinfos.gameinfo'),
        ),
        migrations.CreateModel(
            name='BarnItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='create')),
                ('update_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='update')),
                ('amount', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='amount')),
                ('gameinfo', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='barn_items', to='gameinfos.gameinfo')),
                ('product', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='barn_items', to='contents.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AirItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='create')),
                ('update_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='update')),
                ('amount', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='amount')),
                ('reward_cash', models.PositiveIntegerField(verbose_name='reward exp')),
                ('reward_coin', models.PositiveIntegerField(verbose_name='reward coin')),
                ('reward_exp', models.PositiveIntegerField(verbose_name='reward exp')),
                ('air', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='air_items', to='gameinfos.air')),
                ('product', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='air_items', to='contents.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='air',
            name='gameinfo',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='airs', to='gameinfos.gameinfo'),
        ),
    ]
